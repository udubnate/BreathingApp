# Build stage
FROM node:18-alpine AS build

# Set working directory
WORKDIR /app

# Install dependencies needed for some packages
RUN apk add --no-cache python3 make g++

# Copy package files
COPY package*.json ./

# Configure npm for better reliability and install dependencies
RUN npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set fetch-timeout 300000 && \
    npm ci --only=production=false --silent

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Create temp directories and set permissions
RUN mkdir -p /tmp/nginx \
    && chown -R nginx:nginx /tmp/nginx \
    && chmod -R 755 /tmp/nginx

# Copy custom nginx config
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built assets from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Set permissions for the app files
RUN chown -R nginx:nginx /usr/share/nginx/html

# Switch to non-root user
USER nginx

# Expose port 80 (matching nginx config)
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
